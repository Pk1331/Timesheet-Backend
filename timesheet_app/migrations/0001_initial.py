# Generated by Django 5.1.7 on 2025-03-31 06:15

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('usertype', models.CharField(choices=[('SuperAdmin', 'SuperAdmin'), ('Admin', 'Admin'), ('TeamLeader', 'TeamLeader'), ('User', 'User')], max_length=50)),
                ('firstname', models.CharField(default='Narayan', max_length=50)),
                ('lastname', models.CharField(default='Rajan', max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('team', models.CharField(blank=True, choices=[('Search', 'Search Team'), ('Creative', 'Creative Team'), ('Development', 'Development Team')], max_length=50, null=True)),
                ('subteam', models.CharField(blank=True, choices=[('SEO', 'SEO'), ('SMO', 'SMO'), ('SEM', 'SEM'), ('Design', 'Design Team'), ('Content Writing', 'Content Writing'), ('Python Development', 'Python Development'), ('Web Development', 'Web Development')], max_length=50, null=True)),
                ('chat_id', models.CharField(default='1234567890', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Custom User',
                'verbose_name_plural': 'Custom Users',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_field', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('Ongoing', 'Ongoing'), ('Completed', 'Completed'), ('Upcoming', 'Upcoming')], max_length=50)),
                ('start_date', models.DateField()),
                ('deadline', models.DateField()),
                ('created_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='created_projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('To Do', 'To Do'), ('In Progress', 'In Progress'), ('Review', 'Review'), ('Completed', 'Completed')], default='To Do', max_length=50)),
                ('priority', models.CharField(default='Medium', max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('admin_assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_tasks', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='timesheet_app.project')),
                ('superadmin_assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='superadmin_tasks', to=settings.AUTH_USER_MODEL)),
                ('teamleader_assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teamleader_tasks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('team', models.CharField(choices=[('Search', 'Search Team'), ('Creative', 'Creative Team'), ('Development', 'Development Team')], max_length=50)),
                ('subteam', models.CharField(blank=True, choices=[('SEO', 'SEO'), ('SMO', 'SMO'), ('SEM', 'SEM'), ('Design', 'Design Team'), ('Content Writing', 'Content Writing'), ('Python Development', 'Python Development'), ('Web Development', 'Web Development')], max_length=50, null=True)),
                ('account_managers', models.ManyToManyField(related_name='managed_teams', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='created_teams', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='teams', to=settings.AUTH_USER_MODEL)),
                ('projects', models.ManyToManyField(related_name='teams_assigned', to='timesheet_app.project')),
                ('team_leader_creative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='led_creative_teams', to=settings.AUTH_USER_MODEL)),
                ('team_leader_development', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='led_development_teams', to=settings.AUTH_USER_MODEL)),
                ('team_leader_search', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='led_search_teams', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='teams',
            field=models.ManyToManyField(related_name='projects_assigned', to='timesheet_app.team'),
        ),
        migrations.CreateModel(
            name='TeamLeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_field', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Timesheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('task', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('To Do', 'To Do'), ('On Progress', 'On Progress'), ('On Hold', 'On Hold'), ('Completed', 'Completed')], default='To Do', max_length=20)),
                ('description', models.TextField()),
                ('hours', models.DecimalField(decimal_places=1, max_digits=5)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_timesheets', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='timesheets', to='timesheet_app.project')),
                ('submitted_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_timesheets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TimesheetTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending Review', 'Pending Review'), ('Sent for Review', 'Sent for Review'), ('Approved by Team Leader', 'Approved by Team Leader'), ('Rejected by Team Leader', 'Rejected by Team Leader'), ('Approved by Admin', 'Approved by Admin'), ('Rejected by Admin', 'Rejected by Admin')], default='Pending Review', max_length=50)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_timesheet_tables', to=settings.AUTH_USER_MODEL)),
                ('timesheets', models.ManyToManyField(related_name='timesheet_tables', to='timesheet_app.timesheet')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_field', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
